###############################################################################
# Copyright (c) 2011 neXtep Software and contributors.
# All rights reserved.
#
# This file is part of neXtep designer.
#
# NeXtep designer is free software: you can redistribute it 
# and/or modify it under the terms of the GNU General Public 
# License as published by the Free Software Foundation, either 
# version 3 of the License, or any later version.
#
# NeXtep designer is distributed in the hope that it will be 
# useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
#
# Contributors:
#     neXtep Softwares - initial API and implementation
###############################################################################
installer.byeMsg=Bye.
installer.exceptions.invalidOption=Invalid option ''{0}'' defined, aborting the installation.
installer.exceptions.unsupportedArtefact=Unsupported artefact type: {0}
installer.headerLine1=neXtep Installer 1.0.7.3 - Started on {0}
installer.headerLine2=Copyright (c) 2007-2015 neXtep Softwares. All rights reserved.
installer.installationTerminated=Installation terminated.
installer.nonValuedOptionPattern=-{0}
installer.showInfoFail=Unable to fetch install information: 
installer.usageFooterLine1=All options but user and database are optional.
installer.usageFooterLine2=NXTP_HOME environment variable must point to your neXtep Installer root directory.
installer.usageLine1=Usage: nxtp [OPTION[=VALUE]]*
installer.usageLine2=
installer.usageLine3=The installer should be launched from a neXtep delivery directory and will deploy
installer.usageLine4=it to a target database defined through command line options.
installer.usageLine5=
installer.usageLineOptions=OPTIONS:
installer.mandatoryOptionPattern=-{0}={1}
installer.invalidOptionException=Option ''{0}'' is not valid
installer.option.database=database identifier to connect to
installer.option.help=displays this help information
installer.option.host=host name or ip address of the database server (optional)(default is localhost)
installer.option.info=displays installed modules and their consistency on the target database
installer.option.install=deploys the admin schema on the target database
installer.option.nocheck=will not perform a structure check before allowing deployment (use carefully)
installer.option.password=password to log in the database server
installer.option.port=the port on which the database server is listening to (optional)(default is vendor default)
installer.option.repository=indicates that the delivery is a neXtep IDE repository delivery
installer.option.username=user name to log in the database server
installer.option.verbose=causes the installer to log stack traces of any error
requirement.delivery.descriptorFileNotFoundException=No delivery descriptor file ''{0}'' has been found in ''{1}''
requirement.delivery.invalidDescriptorException=Exception during parse of ''{0}'' in ''{1}''
requirement.delivery.unsupportedDBVendorException=Unsupported database vendor ''{0}''
service.admin.closeReleaseResultSetException=Unable to close result set while registering release: {0}
service.admin.closeReleaseStatementException=Unable to close statement while registering release: {0}
service.admin.closeResultSetException=Unable to close result set
service.admin.closeStatementException=Unable to close statement
service.admin.getReleaseChecksFail=Unable to retrieve release checks: {0}
service.admin.getReleaseFailException=Problems while retrieving module release: 
service.admin.installDateCol=Install date
service.admin.installReleaseFail=Problems while registering release: {0}
service.admin.missingObject=Missing [{0}] {1}
service.admin.moduleNameCol=Module name
service.admin.nullDeliveryError=Cannot install a null delivery
service.admin.nullNameError=Delivery must have a name
service.admin.releaseCol=Release
service.admin.releaseColumn=Release
service.admin.unknownDate=Unknown date
service.admin.showInstalledReleasesFail=Unable to fetch installed releases information from admin: {0}
service.admin.statusColumn=Status
service.admin.structureCheckColumn=Structure check
service.admin.structureCheckFailClose=Problems while closing statement during structure check: 
service.admin.structureCheckFailException=Unable to process target database structural check: 
service.installer.adminConnectionReleaseFailure=Unable to release admin connection: {0}
service.installer.cannotUpgrade=This delivery cannot upgrade release {0}
service.installer.checkFail=FAIL
service.installer.configCheck=Configuring installation :
service.installer.dependencyCheck=Checking dependencies...
service.installer.deployModuleRelease=Deploying {0} release {1} to a {2} database.
service.installer.failStructureCheck=Structure check failed\!
service.installer.failure=FAIL\!
service.installer.failureWithMessage=FAIL: {0}
service.installer.getReleaseFail=Unable to retrieve release from repository.
service.installer.installFailForceQuestion=Install of {0} [{1}] failed, enter "force" to continue? 
service.installer.installing=Installing {0}...
service.installer.minimumReleaseFail=Current release {0} cannot be upgraded, minimum release is {1}.
service.installer.missingDependency=Missing dependent module ''{0}'' [{1}]
service.installer.missingRequirements=Missing requirements, exiting
service.installer.needFullDelivery=Cannot upgrade the current release. You need to perform a full installation but this is not a full delivery.
service.installer.nothingToDo=Nothing to do.
service.installer.OK=OK.
service.installer.registeringRelease=Registering ''{0}'' release {1}...
service.installer.registeringReleaseTask=Registering {0} [{1}]...
service.installer.releaseUpToDate=Current release is already up to date.
service.installer.releaseUpToDateWithErrors=Current release contains structural errors, please fix the database.
service.installer.repairMsg=Please repair the database and try again, or specify the -nocheck command line argument
service.installer.skippedFail=SKIPPED [FAIL]
service.installer.skippedOk=SKIPPED [OK]
service.installer.structureCheck=Checking structure...
service.installer.structureCheckFail=The target database did not pass the structure check.
service.installer.structureCheckRelease=Checking structure of {0} [{1}]...
service.installer.success=SUCCESS
service.installer.successWithMessage=SUCCESS -> [{0}]
service.installer.targetConnectionReleaseFailure=Unable to release target connection: {0}
service.installer.upgrading=Upgrading ''{0}'': {1} -> [{2}]
service.installer.upgradingModule=Upgrading {0} to {1}...
service.installer.verifyingModule=Verifying {0}...
service.installer.voidRelease=[None]
service.logging.errorLoggerMsg=Error: {0}
